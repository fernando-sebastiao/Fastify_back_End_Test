datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int         @id @default(autoincrement())
  username  String
  password  String
  email     String      @unique
  createdAt DateTime    @default(now())
  projects  Project[]
  tasks     Task[]
  comments  Comment[]
  userAcess UserAcess[]
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks       Task[]
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      String    @default("pending")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  projectId   Int
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserAcess {
  id         Int      @id @default(autoincrement())
  Acess      Acess?   @relation(fields: [acessId], references: [id])
  acessId    Int?
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt
  User       User?    @relation(fields: [userId], references: [id])
  userId     Int?
}

model Acess {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  userAcess  UserAcess[]
  created_at DateTime    @default(now())
  update_at  DateTime    @updatedAt
}
